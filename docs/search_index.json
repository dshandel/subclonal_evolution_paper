[["copy-number-analyses.html", "4 Copy number analyses 4.1 Colorectal cancer-specific arm-level copy number alterations per organoid 4.2 Copy number alterations per subclone", " 4 Copy number analyses # Libraries and sources library(tidyverse) library(openxlsx) library(GenomicRanges) source(&#39;R/find_specific_cna_sc.R&#39;) source(&#39;R/get_cytoband_coverage.R&#39;) source(&#39;R/get_genes.R&#39;) source(&#39;R/get_oncogenes.R&#39;) source(&#39;R/plot_genes_karyotype.R&#39;) 4.1 Colorectal cancer-specific arm-level copy number alterations per organoid ######## # Data # ######## load(&#39;../cna_analysis/rda/subclonal_dynamics/man_select_files_edivisive.rda&#39;) # !!! GITHUB SPECIFIC CODE !!! # # adding &#39;../cna_analysis/&#39; to each path within man_select_files_edivisive man_select_files_edivisive &lt;- lapply(man_select_files_edivisive, function(x) paste0(&quot;../cna_analysis/&quot;, x)) ########### # Wrangle # ########### # extract only prerad clines # prerad clines kra_list &lt;- c(&quot;kra003&quot;, &quot;kra005&quot;, &quot;kra007&quot;, &quot;kra009&quot;, &quot;kra023&quot;, &quot;kra025&quot;, &quot;kra027&quot;) ####### # Run # ####### ## finding common CNAs within each subclone for each organoids. common_cnas &lt;- find_specific_cna_sc( list_resistant = man_select_files_edivisive[kra_list], # make sure to input this as a list! list_sensitive = NULL, perc_cutoff_within_subclone_resistant = 0.8, # CNA needs to be in 80% of the cells or more perc_cutoff_within_subclone_sensitive = NULL, per_cutoff_across_subclone_resistant = NULL, per_cutoff_across_subclone_sensitive = NULL, return_cnas_per_subclone = T ) ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted segment info from files&quot; ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted CNAs that are shared by 80% of single cells within each resistant subclone, and by % of single cells within each sensitive subclone&quot; ## mapping CNA to cytoband location # for amplifications amplifications &lt;- lapply(common_cnas$amplifications, get_cytoband_coverage) # Extract frequency of arm level amplifications n indicates the how many # organoids contain the CNA arm_amp &lt;- lapply(amplifications, function(x) { return(x[[2]]) }) %&gt;% bind_rows(.id = &quot;cline&quot;) %&gt;% group_by(cline, chromosome, arm) %&gt;% count(percentage_arm_affected &gt; 0.8) %&gt;% arrange(desc(n)) %&gt;% ungroup(cline) %&gt;% count(chromosome) %&gt;% arrange(desc(n)) %&gt;% mutate(freq = n / 7) DT::datatable(arm_amp, caption = &quot;Arm-level amplifications in organoids&quot;) # for deletions deletions &lt;- lapply(common_cnas$deletions, get_cytoband_coverage) # Extract frequency of arm level deletions. n indicates the how many # organoids contain the CNA arm_del &lt;- lapply(deletions, function(x) { return(x[[2]]) }) %&gt;% bind_rows(.id = &quot;cline&quot;) %&gt;% group_by(cline, chromosome, arm) %&gt;% count(percentage_arm_affected &gt; 0.8) %&gt;% arrange(desc(n)) %&gt;% ungroup(cline) %&gt;% count(chromosome) %&gt;% arrange(desc(n)) %&gt;% mutate(freq = n / 7) DT::datatable(arm_del, caption = &quot;Arm-level deletions in organoids&quot;) ####### # End # ####### 4.2 Copy number alterations per subclone 4.2.1 Copy number alterations specific to HUB062A ######## # Data # ######## load(&#39;../cna_analysis/rda/subclonal_dynamics/subclone_list.rda&#39;) # !!! GITHUB SPECIFIC CODE !!! # # adding &#39;../cna_analysis/&#39; to each path within man_select_files_edivisive subclone_list &lt;- lapply(subclone_list, function(x) paste0(&quot;../cna_analysis/&quot;, x)) ########### # Wrangle # ########### # extracting resistant and sensitive subclones of hub062 hub062 &lt;- names(subclone_list)[grepl(&#39;hub062&#39;, names(subclone_list))] res &lt;- hub062[grepl(&#39;hub062_postrad_a&#39;, hub062)] sens &lt;- hub062[grepl(&#39;hub062_postrad_b|hub062_postrad_c&#39;, hub062)] # remove cycle 2 sens &lt;- sens[!grepl(&#39;c2&#39;, sens)] ####### # Run # ####### ## finding common CNAs within each subclone for each organoids. hub062a_specific_cnas &lt;- find_specific_cna_sc( list_resistant = subclone_list[res], list_sensitive = subclone_list[sens], perc_cutoff_within_subclone_resistant = 0.6, perc_cutoff_within_subclone_sensitive = 0.6, per_cutoff_across_subclone_resistant = 0.2, per_cutoff_across_subclone_sensitive = 0.2, return_cnas_per_subclone = F ) ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted segment info from files&quot; ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted CNAs that are shared by 60 and 60% of single cells within resistant and sensitive subclones, respectively, and that are shared by 20 and 20% across resistant and sensitive subclones, respectively.&quot; ## [1] &quot;Computing (few seconds)...&quot; ## [1] &quot;Identified amplifications and deletions that are unique to resistant or sensitive subclones&quot; ## mapping CNA to cytoband location # for amplifications ampl_hub062a &lt;- get_cytoband_coverage(hub062a_specific_cnas$unique_resistant_ampl) DT::datatable(as.data.frame(ampl_hub062a[[1]]), caption = &quot;HUB062A-specific amplifications (exact location)&quot;) del_hub062a &lt;- get_cytoband_coverage(hub062a_specific_cnas$unique_resistant_del) # No HUB062A-specific deletions were found. ####### # Run # ####### # All genes # ############# genes_ampl_hub062a &lt;- get_genes(ampl_hub062a[[1]]) DT::datatable(as.data.frame(genes_ampl_hub062a), caption = &quot;Genes on HUB062A-specific amplifications&quot;) # Oncogenes # ############# oncogenes_ampl_hub062a &lt;- get_oncogenes(ampl_hub062a[[1]]) DT::datatable(as.data.frame(oncogenes_ampl_hub062a), caption = &quot;Oncogenes on HUB062A-specific amplifications&quot;) ######## # Data # ######## load(&#39;../cna_analysis/rda/cna_analysis/hub062a_specific_cnas_genes.rda&#39;) ########### # Wrangle # ########### # plot_genes_karyotype needs a GRange with seqnames, ranges, strand and hgnc_symbol # add ampl/del column oncogenes_ampl_hub062a$cn &lt;- &#39;amplified&#39; # bind dataframes oncogenes &lt;- oncogenes_ampl_hub062a # extract needed columns keep &lt;- c(&#39;Gene Symbol&#39;, &#39;chromosome_name&#39;, &#39;start_position&#39;, &#39;end_position&#39;, &#39;cn&#39;) oncogenes &lt;- oncogenes[, keep] # rename colnames(oncogenes) &lt;- c(&#39;hgnc_symbol&#39;, &#39;seqnames&#39;, &#39;start&#39;, &#39;end&#39;, &#39;cn&#39;) # convert to dataframe onco_grange &lt;- makeGRangesFromDataFrame(oncogenes) # metadata is deleted onco_grange$hgnc_symbol &lt;- oncogenes$hgnc_symbol onco_grange$cn &lt;- oncogenes$cn ########################## # Choose genes to depict # ########################## oncogenes_ampl_hub062a &lt;- oncogenes_ampl_hub062a[order(oncogenes_ampl_hub062a$`Genome Location`),] show_oncogenes_ampl &lt;- c(&#39;FANCF&#39;, &#39;CREB3L1&#39;, &#39;DDB2&#39;, &#39;HRAS&#39;, &#39;CCND1&#39;, &#39;NF1&#39;, &#39;FANCG&#39;, &#39;JAK2&#39;, &#39;AR&#39;) show_oncogenes &lt;- c(show_oncogenes_ampl) ######## # PLOT # ######## plot_genes_karyotype( onco_grange, show_genes = show_oncogenes, dist = -45, show_chromosomes = c( &quot;chr9&quot;, &quot;chr10&quot;, &quot;chr11&quot;, &quot;chr12&quot;, &quot;chr13&quot;, &quot;chr14&quot;, &quot;chr15&quot;, &quot;chr16&quot;, &quot;chr17&quot;, &quot;chr18&quot;, &quot;chr19&quot;, &quot;chr20&quot;, &quot;chr21&quot;, &quot;chr22&quot;, &quot;chrX&quot; ) ) 4.2.2 Copy number alterations specific to resistant subclones ## Loading required package: AneuFinder ## Loading required package: cowplot ## ## Attaching package: &#39;cowplot&#39; ## The following object is masked from &#39;package:lubridate&#39;: ## ## stamp ## Loading required package: AneuFinderData ## ## Please visit https://github.com/ataudt/aneufinder for the latest bugfixes and features. ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted segment info from files&quot; ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted CNAs that are shared by 60 and 60% of single cells within resistant and sensitive subclones, respectively, and that are shared by 80 and 10% across resistant and sensitive subclones, respectively.&quot; ## [1] &quot;Computing (few seconds)...&quot; ## [1] &quot;Identified amplifications and deletions that are unique to resistant or sensitive subclones&quot; ## Loading required package: tidyverse ## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── ## ✔ dplyr 1.1.2 ✔ readr 2.1.4 ## ✔ forcats 1.0.0 ✔ stringr 1.5.0 ## ✔ ggplot2 3.4.2 ✔ tibble 3.2.1 ## ✔ lubridate 1.9.2 ✔ tidyr 1.3.0 ## ✔ purrr 1.0.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() ## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors ## Loading required package: plyranges ## ## Loading required package: BiocGenerics ## ## ## Attaching package: &#39;BiocGenerics&#39; ## ## ## The following objects are masked from &#39;package:lubridate&#39;: ## ## intersect, setdiff, union ## ## ## The following objects are masked from &#39;package:dplyr&#39;: ## ## combine, intersect, setdiff, union ## ## ## The following objects are masked from &#39;package:stats&#39;: ## ## IQR, mad, sd, var, xtabs ## ## ## The following objects are masked from &#39;package:base&#39;: ## ## anyDuplicated, append, as.data.frame, basename, cbind, colnames, ## dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, ## grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget, ## order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, ## rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, ## union, unique, unsplit, which.max, which.min ## ## ## Loading required package: IRanges ## ## Loading required package: S4Vectors ## ## ## Attaching package: &#39;S4Vectors&#39; ## ## ## The following objects are masked from &#39;package:lubridate&#39;: ## ## second, second&lt;- ## ## ## The following objects are masked from &#39;package:dplyr&#39;: ## ## first, rename ## ## ## The following object is masked from &#39;package:tidyr&#39;: ## ## expand ## ## ## The following objects are masked from &#39;package:base&#39;: ## ## expand.grid, I, unname ## ## ## ## Attaching package: &#39;IRanges&#39; ## ## ## The following object is masked from &#39;package:lubridate&#39;: ## ## %within% ## ## ## The following objects are masked from &#39;package:dplyr&#39;: ## ## collapse, desc, slice ## ## ## The following object is masked from &#39;package:purrr&#39;: ## ## reduce ## ## ## Loading required package: GenomicRanges ## ## Loading required package: GenomeInfoDb ## ## ## Attaching package: &#39;plyranges&#39; ## ## ## The following object is masked from &#39;package:IRanges&#39;: ## ## slice ## ## ## The following objects are masked from &#39;package:dplyr&#39;: ## ## between, n, n_distinct ## ## ## The following object is masked from &#39;package:stats&#39;: ## ## filter 4.2.3 Newly acquired copy number alterations ############### # Description # ############### # We are going to define the presence of &#39;new&#39; CNAs after radiation therapy. # I define the following rules: # (i) Analysis will be done within subclone # (ii) A &#39;new&#39; CNA will be called new only if it was not found before radiation # (iii) I exclude all subclones where the numbers of cells within a subclone is lower than 5. # (iv) Because in essence, all cells are related to each other (even those in distinct) # subclones, I am going to compare each post-rad subclone to all pooled subclones before # radiation. # (v) We are looking for acquired CNAs; CNAs that could explain why cells with that # CNA propagated. Therefore, the CNA has to be present in at least 50% of the cells. ########### # Wrangle # ########### # remove subclones with fewer than 10 cells pre-or post rad. lapply(subclone_list, length) ## $hub183_prerad_a ## [1] 127 ## ## $hub183_postrad_a ## [1] 110 ## ## $hub005_prerad_a.a ## [1] 25 ## ## $hub005_prerad_a.b ## [1] 13 ## ## $hub005_prerad_b ## [1] 118 ## ## $hub005_postrad_a.a ## [1] 17 ## ## $hub005_postrad_a.b ## [1] 2 ## ## $hub005_postrad_b ## [1] 70 ## ## $hub106_prerad_a ## [1] 64 ## ## $hub106_prerad_b ## [1] 59 ## ## $hub106_prerad_c ## [1] 4 ## ## $hub106_postrad_a ## [1] 60 ## ## $hub106_postrad_b ## [1] 103 ## ## $hub106_postrad_c ## [1] 18 ## ## $hub062_prerad_a ## [1] 2 ## ## $hub062_prerad_b ## [1] 127 ## ## $hub062_prerad_c ## [1] 7 ## ## $hub062_postrad_a ## [1] 39 ## ## $hub062_postrad_b ## [1] 38 ## ## $hub062_postrad_c ## [1] 7 ## ## $hub062_postrad_c2_a ## [1] 187 ## ## $hub062_postrad_c2_c ## [1] 1 ## ## $hub015_prerad_a.b ## [1] 276 ## ## $hub015_prerad_b ## [1] 1 ## ## $hub015_postrad_a.a ## [1] 110 ## ## $hub015_postrad_a.b ## [1] 157 ## ## $hub015_postrad_b ## [1] 14 ## ## $hub181i_prerad_a ## [1] 72 ## ## $hub181i_prerad_b ## [1] 233 ## ## $hub181i_postrad_a ## [1] 72 ## ## $hub181i_postrad_b ## [1] 239 ## ## $hub197_prerad_a ## [1] 24 ## ## $hub197_prerad_b ## [1] 17 ## ## $hub197_prerad_c ## [1] 91 ## ## $hub197_postrad_a ## [1] 252 ## ## $hub062biological_prerad_a ## [1] 14 ## ## $hub062biological_prerad_b ## [1] 205 ## ## $hub062biological_prerad_c ## [1] 13 ## ## $hub062biological_postrad_a ## [1] 178 remove_me &lt;- c(&#39;hub005_prerad_a.b&#39;, &#39;hub005_postrad_a.b&#39;, # because only 2 cells in hub005_postrad_a.b &#39;hub062_prerad_a&#39;, # only 2 cells, here I am going to compare C1 vs C2, so # I don&#39;t remove hub062_postrad_a &#39;hub015_prerad_b&#39;, &#39;hub015_postrad_b&#39;, # only 1 cell in prerad &#39;hub197_prerad_b&#39;,&#39;hub197_prerad_b&#39;, # extinction &#39;hub197_prerad_c&#39;,&#39;hub197_postrad_c&#39; # extinction ) subclone_list &lt;- subclone_list[!(names(subclone_list) %in% remove_me)] ############# # Variables # ############# # Percentage of cells cut-off pcc &lt;- 0.5 ######## # RUNS # ######## # HUB183 # ###################################################################### # Extract HUB183 hub183 &lt;- names(subclone_list)[grepl(&#39;hub183&#39;, names(subclone_list))] # combine prerad subclones and a.b hub183_prerad_subclones &lt;- hub183[grepl(&#39;prerad&#39;, hub183)] # get each postrad subclone individually hub183_postrad_a &lt;- hub183[grepl(&#39;hub183_postrad_a&#39;, hub183)] # no new genomic aberrations hub183_postrad_a &lt;- find_specific_cna_sc( list_resistant = subclone_list[hub183_postrad_a], list_sensitive = subclone_list[hub183_prerad_subclones], perc_cutoff_within_subclone_resistant = pcc, perc_cutoff_within_subclone_sensitive = 0.001, per_cutoff_across_subclone_resistant = 0.001, per_cutoff_across_subclone_sensitive = 0.001, return_cnas_per_subclone = F ) ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted segment info from files&quot; ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted CNAs that are shared by 50 and 0.1% of single cells within resistant and sensitive subclones, respectively, and that are shared by 0.1 and 0.1% across resistant and sensitive subclones, respectively.&quot; ## [1] &quot;Computing (few seconds)...&quot; ## [1] &quot;Identified amplifications and deletions that are unique to resistant or sensitive subclones&quot; # HUB005 # ###################################################################### # Extract HUB005 hub005 &lt;- names(subclone_list)[grepl(&#39;hub005&#39;, names(subclone_list))] # combine prerad subclones and a.b hub005_prerad_subclones &lt;- hub005[grepl(&#39;prerad&#39;, hub005)] # get each postrad subclone individually hub005_postrad_a.a &lt;- hub005[grepl(&#39;hub005_postrad_a.a&#39;, hub005)] hub005_postrad_b &lt;- hub005[grepl(&#39;hub005_postrad_b&#39;, hub005)] # no new CNAs hub005_postrad_a.a &lt;- find_specific_cna_sc( list_resistant = subclone_list[hub005_postrad_a.a], list_sensitive = subclone_list[hub005_prerad_subclones], perc_cutoff_within_subclone_resistant = pcc, perc_cutoff_within_subclone_sensitive = 0.001, per_cutoff_across_subclone_resistant = 0.001, per_cutoff_across_subclone_sensitive = 0.001, return_cnas_per_subclone = F ) ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted segment info from files&quot; ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted CNAs that are shared by 50 and 0.1% of single cells within resistant and sensitive subclones, respectively, and that are shared by 0.1 and 0.1% across resistant and sensitive subclones, respectively.&quot; ## [1] &quot;Computing (few seconds)...&quot; ## [1] &quot;Identified amplifications and deletions that are unique to resistant or sensitive subclones&quot; # no new CNAs hub005_postrad_b &lt;- find_specific_cna_sc( list_resistant = subclone_list[hub005_postrad_b], list_sensitive = subclone_list[hub005_prerad_subclones], perc_cutoff_within_subclone_resistant = pcc, perc_cutoff_within_subclone_sensitive = 0.001, per_cutoff_across_subclone_resistant = 0.001, per_cutoff_across_subclone_sensitive = 0.001, return_cnas_per_subclone = F ) ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted segment info from files&quot; ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted CNAs that are shared by 50 and 0.1% of single cells within resistant and sensitive subclones, respectively, and that are shared by 0.1 and 0.1% across resistant and sensitive subclones, respectively.&quot; ## [1] &quot;Computing (few seconds)...&quot; ## [1] &quot;Identified amplifications and deletions that are unique to resistant or sensitive subclones&quot; # HUB015 # ###################################################################### # Extract HUB015 hub015 &lt;- names(subclone_list)[grepl(&#39;hub015&#39;, names(subclone_list))] # combine prerad subclones and a.b hub015_prerad_subclones &lt;- hub015[grepl(&#39;prerad&#39;, hub015)] # get each postrad subclone individually hub015_postrad_a.a &lt;- hub015[grepl(&#39;hub015_postrad_a.a&#39;, hub015)] hub015_postrad_a.b &lt;- hub015[grepl(&#39;hub015_postrad_a.b&#39;, hub015)] hub015_postrad_b &lt;- hub015[grepl(&#39;hub015_postrad_b&#39;, hub015)] # hub015_postrad_a.a: new deletion on 4q hub015_postrad_a.a &lt;- find_specific_cna_sc( list_resistant = subclone_list[hub015_postrad_a.a], list_sensitive = subclone_list[hub015_prerad_subclones], perc_cutoff_within_subclone_resistant = pcc, perc_cutoff_within_subclone_sensitive = 0.001, per_cutoff_across_subclone_resistant = 0.001, per_cutoff_across_subclone_sensitive = 0.001, return_cnas_per_subclone = F ) ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted segment info from files&quot; ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted CNAs that are shared by 50 and 0.1% of single cells within resistant and sensitive subclones, respectively, and that are shared by 0.1 and 0.1% across resistant and sensitive subclones, respectively.&quot; ## [1] &quot;Computing (few seconds)...&quot; ## [1] &quot;Identified amplifications and deletions that are unique to resistant or sensitive subclones&quot; # HUB015 has a new deletion following radiation in 4q DT::datatable(as.data.frame(get_cytoband_coverage(hub015_postrad_a.a$unique_resistant_del)[[1]]), caption = &quot;HUB015 has a new deletion in 4q&quot;) # This deletion contains the following oncogenes DT::datatable(get_oncogenes(get_cytoband_coverage(hub015_postrad_a.a$unique_resistant_del)[[1]]), caption = &quot;Oncogenes in HUB015 4q deletion&quot;) # hub015_postrad_a.a: no new amplificatoins no new deletions hub015_postrad_a.b &lt;- find_specific_cna_sc( list_resistant = subclone_list[hub015_postrad_a.b], list_sensitive = subclone_list[hub015_prerad_subclones], perc_cutoff_within_subclone_resistant = pcc, perc_cutoff_within_subclone_sensitive = 0.001, per_cutoff_across_subclone_resistant = 0.001, per_cutoff_across_subclone_sensitive = 0.001, return_cnas_per_subclone = F ) ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted segment info from files&quot; ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted CNAs that are shared by 50 and 0.1% of single cells within resistant and sensitive subclones, respectively, and that are shared by 0.1 and 0.1% across resistant and sensitive subclones, respectively.&quot; ## [1] &quot;Computing (few seconds)...&quot; ## [1] &quot;Identified amplifications and deletions that are unique to resistant or sensitive subclones&quot; # # HUB106 # ###################################################################### # Extract HUB106 hub106 &lt;- names(subclone_list)[grepl(&#39;hub106&#39;, names(subclone_list))] # combine prerad subclones and a.b hub106_prerad_subclones &lt;- hub106[grepl(&#39;prerad&#39;, hub106)] # get each postrad subclone individually hub106_postrad_a &lt;- hub106[grepl(&#39;hub106_postrad_a&#39;, hub106)] hub106_postrad_b &lt;- hub106[grepl(&#39;hub106_postrad_b&#39;, hub106)] hub106_postrad_c &lt;- hub106[grepl(&#39;hub106_postrad_c&#39;, hub106)] # no new CNAs hub106_postrad_a &lt;- find_specific_cna_sc( list_resistant = subclone_list[hub106_postrad_a], list_sensitive = subclone_list[hub106_prerad_subclones], perc_cutoff_within_subclone_resistant = pcc, perc_cutoff_within_subclone_sensitive = 0.001, per_cutoff_across_subclone_resistant = 0.001, per_cutoff_across_subclone_sensitive = 0.001, return_cnas_per_subclone = F ) ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted segment info from files&quot; ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted CNAs that are shared by 50 and 0.1% of single cells within resistant and sensitive subclones, respectively, and that are shared by 0.1 and 0.1% across resistant and sensitive subclones, respectively.&quot; ## [1] &quot;Computing (few seconds)...&quot; ## [1] &quot;Identified amplifications and deletions that are unique to resistant or sensitive subclones&quot; # no new CNAs hub106_postrad_b &lt;- find_specific_cna_sc( list_resistant = subclone_list[hub106_postrad_b], list_sensitive = subclone_list[hub106_prerad_subclones], perc_cutoff_within_subclone_resistant = pcc, perc_cutoff_within_subclone_sensitive = 0.001, per_cutoff_across_subclone_resistant = 0.001, per_cutoff_across_subclone_sensitive = 0.001, return_cnas_per_subclone = F ) ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted segment info from files&quot; ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted CNAs that are shared by 50 and 0.1% of single cells within resistant and sensitive subclones, respectively, and that are shared by 0.1 and 0.1% across resistant and sensitive subclones, respectively.&quot; ## [1] &quot;Computing (few seconds)...&quot; ## [1] &quot;Identified amplifications and deletions that are unique to resistant or sensitive subclones&quot; # no new CNAs hub106_postrad_c &lt;- find_specific_cna_sc( list_resistant = subclone_list[hub106_postrad_c], list_sensitive = subclone_list[hub106_prerad_subclones], perc_cutoff_within_subclone_resistant = pcc, perc_cutoff_within_subclone_sensitive = 0.001, per_cutoff_across_subclone_resistant = 0.001, per_cutoff_across_subclone_sensitive = 0.001, return_cnas_per_subclone = F ) ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted segment info from files&quot; ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted CNAs that are shared by 50 and 0.1% of single cells within resistant and sensitive subclones, respectively, and that are shared by 0.1 and 0.1% across resistant and sensitive subclones, respectively.&quot; ## [1] &quot;Computing (few seconds)...&quot; ## [1] &quot;Identified amplifications and deletions that are unique to resistant or sensitive subclones&quot; # HUB062 # ###################################################################### hub062 &lt;- names(subclone_list)[grepl(&#39;hub062&#39;, names(subclone_list))] # combine prerad subclones and a.b hub062_prerad_subclones &lt;- hub062[grepl(&#39;prerad&#39;, hub062)] # get each postrad subclone individually hub062_postrad_a &lt;- hub062[grepl(&#39;hub062_postrad_a&#39;, hub062)] hub062_postrad_b &lt;- hub062[grepl(&#39;hub062_postrad_b&#39;, hub062)] hub062_postrad_c &lt;- hub062[grepl(&#39;hub062_postrad_c&#39;, hub062)] hub062biological_postrad_a &lt;- hub062[grepl(&#39;hub062biological_postrad_a&#39;, hub062)] hub062_postrad_c2_a &lt;- hub062[grepl(&#39;hub062_postrad_c2_a&#39;, hub062)] hub062_postrad_c2_c &lt;- hub062[grepl(&#39;hub062_postrad_c2_c&#39;, hub062)] # No new CNAs hub062_postrad_a &lt;- find_specific_cna_sc( list_resistant = subclone_list[hub062_postrad_a], list_sensitive = subclone_list[hub062_prerad_subclones], perc_cutoff_within_subclone_resistant = pcc, perc_cutoff_within_subclone_sensitive = 0.001, per_cutoff_across_subclone_resistant = 0.001, per_cutoff_across_subclone_sensitive = 0.001, return_cnas_per_subclone = F ) ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted segment info from files&quot; ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted CNAs that are shared by 50 and 0.1% of single cells within resistant and sensitive subclones, respectively, and that are shared by 0.1 and 0.1% across resistant and sensitive subclones, respectively.&quot; ## [1] &quot;Computing (few seconds)...&quot; ## [1] &quot;Identified amplifications and deletions that are unique to resistant or sensitive subclones&quot; # No new CNAs hub062_postrad_b &lt;- find_specific_cna_sc( list_resistant = subclone_list[hub062_postrad_b], list_sensitive = subclone_list[hub062_prerad_subclones], perc_cutoff_within_subclone_resistant = pcc, perc_cutoff_within_subclone_sensitive = 0.001, per_cutoff_across_subclone_resistant = 0.001, per_cutoff_across_subclone_sensitive = 0.001, return_cnas_per_subclone = F ) ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted segment info from files&quot; ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted CNAs that are shared by 50 and 0.1% of single cells within resistant and sensitive subclones, respectively, and that are shared by 0.1 and 0.1% across resistant and sensitive subclones, respectively.&quot; ## [1] &quot;Computing (few seconds)...&quot; ## [1] &quot;Identified amplifications and deletions that are unique to resistant or sensitive subclones&quot; # No new CNAs hub062_postrad_c &lt;- find_specific_cna_sc( list_resistant = subclone_list[hub062_postrad_c], list_sensitive = subclone_list[hub062_prerad_subclones], perc_cutoff_within_subclone_resistant = pcc, perc_cutoff_within_subclone_sensitive = 0.001, per_cutoff_across_subclone_resistant = 0.001, per_cutoff_across_subclone_sensitive = 0.001, return_cnas_per_subclone = F ) ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted segment info from files&quot; ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted CNAs that are shared by 50 and 0.1% of single cells within resistant and sensitive subclones, respectively, and that are shared by 0.1 and 0.1% across resistant and sensitive subclones, respectively.&quot; ## [1] &quot;Computing (few seconds)...&quot; ## [1] &quot;Identified amplifications and deletions that are unique to resistant or sensitive subclones&quot; # No new CNAs hub062biological_postrad_a &lt;- find_specific_cna_sc( list_resistant = subclone_list[hub062biological_postrad_a], list_sensitive = subclone_list[hub062_prerad_subclones], perc_cutoff_within_subclone_resistant = pcc, perc_cutoff_within_subclone_sensitive = 0.001, per_cutoff_across_subclone_resistant = 0.001, per_cutoff_across_subclone_sensitive = 0.001, return_cnas_per_subclone = F ) ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted segment info from files&quot; ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted CNAs that are shared by 50 and 0.1% of single cells within resistant and sensitive subclones, respectively, and that are shared by 0.1 and 0.1% across resistant and sensitive subclones, respectively.&quot; ## [1] &quot;Computing (few seconds)...&quot; ## [1] &quot;Identified amplifications and deletions that are unique to resistant or sensitive subclones&quot; # No new CNAs hub062_postrad_c2_a &lt;- find_specific_cna_sc( list_resistant = subclone_list[hub062_postrad_c2_a], list_sensitive = subclone_list[hub062_prerad_subclones], perc_cutoff_within_subclone_resistant = pcc, perc_cutoff_within_subclone_sensitive = 0.001, per_cutoff_across_subclone_resistant = 0.001, per_cutoff_across_subclone_sensitive = 0.001, return_cnas_per_subclone = F ) ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted segment info from files&quot; ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted CNAs that are shared by 50 and 0.1% of single cells within resistant and sensitive subclones, respectively, and that are shared by 0.1 and 0.1% across resistant and sensitive subclones, respectively.&quot; ## [1] &quot;Computing (few seconds)...&quot; ## [1] &quot;Identified amplifications and deletions that are unique to resistant or sensitive subclones&quot; # No new CNAs hub062_postrad_c2_c &lt;- find_specific_cna_sc( list_resistant = subclone_list[hub062_postrad_c2_c], list_sensitive = subclone_list[hub062_prerad_subclones], perc_cutoff_within_subclone_resistant = pcc, perc_cutoff_within_subclone_sensitive = 0.001, per_cutoff_across_subclone_resistant = 0.001, per_cutoff_across_subclone_sensitive = 0.001, return_cnas_per_subclone = F ) ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted segment info from files&quot; ## [1] &quot;Computing (this may take some minutes)...&quot; ## [1] &quot;Extracted CNAs that are shared by 50 and 0.1% of single cells within resistant and sensitive subclones, respectively, and that are shared by 0.1 and 0.1% across resistant and sensitive subclones, respectively.&quot; ## [1] &quot;Computing (few seconds)...&quot; ## [1] &quot;Identified amplifications and deletions that are unique to resistant or sensitive subclones&quot; "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
